"bottom"
),
legend.outside = TRUE,
frame = F,
main.title = 'Nonspatial Residuals (OLS)'
) +
tm_layout(
bg.color = "skyblue",
saturation = .85
) +
tm_compass(
north = 0,
type = "arrow"
)
cutoff_rad <- .65*max(
dist(
cbind(
rad_df$LONG,
rad_df$LAT
)
)
)
bins_rad <- 10
variogram <- variogram(
log_Dose ~ 1,
locations = ~LONG + LAT,
data = rad_df,
cutoff = cutoff_rad,
width = cutoff_rad/bins_rad
)
plot(variogram)
plot(
variogram,
pch = 16,
cex = 3)
plot(
variogram,
pch = 16,
cex = 2)
plot(
variogram,
pch = 16,
cex = 1.5
)
rad_sp_iso  <- SpatialPointsDataFrame(
coords = rad_d[, 1:2],
data = rad_d,
proj4string = CRS(
"+proj=utm +zone=54"
)
).
rad_sp_iso  <- SpatialPointsDataFrame(
coords = rad_d[, 1:2],
data = rad_d,
proj4string = CRS(
"+proj=utm +zone=54"
)
)
rad_geostat_iso <- lgm(
log_Dose ~ Dist_km + Dist_km_sq,
data = rad_sp,
grid = 500,
shape = 0.5,
fixShape = TRUE,
fixNugget = FALSE,
aniso = FALSE,
reml = TRUE
)
rad_sp_iso  <- SpatialPointsDataFrame(
coords = rad_d[, 1:2],
data = rad_d,
proj4string = CRS(
"+proj=utm +zone=54"
)
)
rad_df
### geostatsp
rad_d <- data.frame(
st_coordinates(
rad_df_points
),
rad_df[, -1:-2]
)
rad_sp_iso  <- SpatialPointsDataFrame(
coords = rad_d[, 1:2],
data = rad_d,
proj4string = CRS(
"+proj=utm +zone=54"
)
)
rad_geostat_iso <- lgm(
log_Dose ~ Dist_km + Dist_km_sq,
data = rad_sp,
grid = 500,
shape = 0.5,
fixShape = TRUE,
fixNugget = FALSE,
aniso = FALSE,
reml = TRUE
)
rad_geostat_iso <- lgm(
log_Dose ~ Dist_km + Dist_km_sq,
data = rad_sp_iso,
grid = 500,
shape = 0.5,
fixShape = TRUE,
fixNugget = FALSE,
aniso = FALSE,
reml = TRUE
)
summary(rad_geostat_iso)
rad_fit_aniso <- lgm(
log_Dose ~ Dist_km + Dist_km_sq,
data = rad_sp_iso,
grid = 500,
shape = 0.5,
fixShape = FALSE,
nugget = 0.05,
fixNugget = FALSE,
aniso = TRUE,
reml = TRUE
)
summary(rad_fit_aniso)
reactor <- c(141.0298, 37.4245)
par(mfrow=c(2,2))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
par(mfrow=c(2,2))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
par(mfrow=c(2,2))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
par(mfrow=c(1,4))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
par(mfrow=c(2,2))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
par(mfcol=c(2,2))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
par(mfcol=c(2,2), mai=c(0.1,0.1,0.2,0.1))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
par(mfcol=c(2,2), mai=c(0.15,0.15,0.25,0.15))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
par(mfcol=c(2,2), mai=c(0.2,0.2,0.3,0.2))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
par(mfcol=c(2,2), mai=c(0.3,0.3,0.3,0.3))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
par(mfcol=c(2,2), mai=c(0.5,0.5,0.5,0.5))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
model_comp <- data.frame(
model = c("Anisotropic", "Isotropic"),
AIC = c(AIC(rad_fit_aniso),AIC(rad_geostat_iso)),
BIC = c(BIC(rad_fit_aniso), BIC(rad_geostat_iso))
)
model_comp
knitr::opts_chunk$set(echo = TRUE)
tm_shape(
japan_fill,
proj4string = CRS(
"+proj=utm +zone=54"
),
ylim = c(
min_lat - correction,
max_lat + correction
),
xlim = c(
min_lon - correction,
max_lon + correction
)
) +
tm_fill(
col = "lightgreen"
) +
tm_borders(
lwd = 2,
col = "black"
) +
tm_shape(
rad_df_points
) +
tm_symbols(
col = "resid",
palette = "-Spectral",
n = 7,
style = "jenks",
border.lwd = 0.1,
border.col = 'gray',
alpha = 0.9,
scale = .75,
title.col = "Residuals"
) +
tm_shape(
japan_cities
) +
tm_text(
"name",
textNA = "",
remove.overlap = T,
shadow = T
) +
tm_legend(
position = c(
"left",
"bottom"
),
legend.outside = TRUE,
frame = F,
main.title = 'Nonspatial Residuals (OLS)'
) +
tm_layout(
bg.color = "skyblue",
saturation = .85
) +
tm_compass(
north = 0,
type = "arrow"
)
tm_shape(
japan_fill,
proj4string = CRS(
"+proj=utm +zone=54"
),
ylim = c(
min_lat - correction,
max_lat + correction
),
xlim = c(
min_lon - correction,
max_lon + correction
)
) +
tm_fill(
col = "lightgreen"
) +
tm_borders(
lwd = 2,
col = "black"
) +
tm_shape(
rad_df_points
) +
tm_symbols(
col = "resid",
palette = "-Spectral",
n = 7,
style = "jenks",
border.lwd = 0.1,
border.col = 'gray',
alpha = 0.9,
scale = .75,
title.col = "Residuals"
) +
tm_shape(
japan_cities
) +
tm_text(
"name",
textNA = "",
remove.overlap = T,
shadow = T
) +
tm_legend(
position = c(
"left",
"bottom"
),
legend.outside = TRUE,
frame = F,
main.title = 'Nonspatial Residuals (OLS)'
) +
tm_layout(
bg.color = "skyblue",
saturation = .85
) +
tm_compass(
north = 0,
type = "arrow"
)
summary(rad_geostat_iso)
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
summary(rad_geostat_iso)
summary(rad_fit_aniso)
model_comp <- data.frame(
model = c("OLS", "Anisotropic", "Isotropic"),
AIC = c(AIC(model), AIC(rad_fit_aniso),AIC(rad_geostat_iso)),
BIC = c(BIC(model), BIC(rad_fit_aniso), BIC(rad_geostat_iso))
)
model_comp
model_comp
reactor <- c(141.0298, 37.4245)
par(mfrow=c(2,2))
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs')
points(reactor[1],reactor[2],pch="R")
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)')
points(reactor[1],reactor[2],pch="R")
plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)')
rmarkdown::render("rmd.Rmd")
summary(rad_df$log_Dose)
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs');points(reactor[1],reactor[2],pch="R");plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs'); points(reactor[1],reactor[2],pch="R")
reactor <- c(141.0298, 37.4245)
par(mfcol=c(2,2), mai=c(0.5,0.5,0.5,0.5))
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)');points(reactor[1],reactor[2],pch="R");plot(rad_geostat_iso$predict[["predict"]],main='Isotropic Predicted log(Dose)');points(reactor[1],reactor[2],pch="R");
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs',contour = TRUE)
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs',contour = T)
warnings()
plot(rad_fit_aniso$predict[["predict"]],main='Anisotropic Predicted log(Dose)', contours = TRUE)
rmarkdown::render("rmd.Rmd")
warnings()
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs');points(reactor[1],reactor[2],pch="R");plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs'); points(reactor[1],reactor[2],pch="R")
plot(rad_fit_aniso$predict[["krigeSd"]],main='Anisotropic Prediction SDs');points(reactor[1],reactor[2],pch="R");plot(rad_geostat_iso$predict[["krigeSd"]],main='Isotropic Prediction SDs'); points(reactor[1],reactor[2],pch="R")
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
ggplot(
data = colo,
aes(
x = Elevation,
y = Precip
)
) +
geom_point(
) +
geom_smooth(
method = "lm"
) +
theme_classic(
)
ggplot(
data = colo,
aes(
x = Elevation,
y = Precip
)
) +
geom_point(
) +
geom_smooth(
method = "lm"
) +
theme_classic(
) +
labs(
title = ""
)
ggplot(
data = colo,
aes(
x = Elevation,
y = Precip
)
) +
geom_point(
) +
geom_smooth(
method = "lm"
) +
theme_classic(
) +
labs(
title = "Colorado Precipitation",
x = "Elevation (meters)",
y = "Precipitation (mm)"
)
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
plot(
variogram,
cex = 2,
pch = 19,
ylab = expression(
paste(
"Average", (0.7*(Y(s[i]) - Y(s[j])^2))
)
)
)
plot(
variogram,
cex = 2,
pch = 19,
ylab = expression(
paste(
"Average", (0.7*(Y(s[i]) - Y(s[j])^2))
)
),
xlab = "Euclidean Distance (km)"
)
plot(
variogram,
cex = 2,
pch = 19,
ylab = expression(
paste(
"Average", (0.7*(Y(s[i]) - Y(s[j])^2))
)
),
xlab = "Euclidean Distance (km)"
)
plot(
variogram,
cex = 2,
pch = 19,
ylab = expression(
paste(
"Average", (0.7*(Y(s[i]) - Y(s[j])^2))
)
),
xlab = "Euclidean Distance (km)"
)
plot(
variogram,
cex = 2,
pch = 19,
ylab = expression(
paste(
"Average", (0.7*(Y(s[i]) - Y(s[j])^2))
)
),
xlab = "Euclidean Distance (km)"
)
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
rmarkdown::render("rmd.Rmd")
save.image("~/Fall 2019/Spatial Stats/Homework 2/data.RData")
